{% extends 'base.html.twig' %}

{% block title %}
	{{publication.title}}
{% endblock %}


{% block body %}




{# message flash quand on supprime un commentaire #}
{% for message in app.flashes('commentaireSupprimer') %}
		<div class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 animate-fade-in-down">
			<div class="bg-green-50 border-l-4 border-green-400 p-4 rounded-lg shadow-lg
					                    flex items-center gap-3
					                    min-w-[280px] sm:min-w-[320px] md:min-w-[384px]
					                    max-w-[90vw] sm:max-w-[400px] md:max-w-[448px]">
				<div class="flex-shrink-0">
					<svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
					</svg>
				</div>
				<div class="flex-1">
					<p class="text-sm sm:text-base text-green-700 font-medium">
						{{ message }}
					</p>
				</div>
				<button onclick="this.parentElement.parentElement.remove()" class="flex-shrink-0 text-green-400 hover:text-green-600 transition-colors duration-200">
					<svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
					</svg>
				</button>
			</div>
		</div>
	{% endfor %}
	{# fin du message flash #}


{#message flash quand on essaye d'ajouter un user mais qu'on est pas connecter #}
	{% for message in app.flashes('connectAjoutDetail') %}
		<div class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 animate-fade-in-down">
			<div class="bg-green-50 border-l-4 border-red-700 p-4 rounded-lg shadow-lg
										                    flex items-center gap-3
										                    min-w-[280px] sm:min-w-[320px] md:min-w-[384px]
										                    max-w-[90vw] sm:max-w-[400px] md:max-w-[448px]">
				<div class="flex-shrink-0">
					<svg class="h-5 w-5 text-red-700" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
					</svg>
				</div>
				<div class="flex-1">
					<p class="text-sm sm:text-base text-red-700 font-medium">
						{{ message }}
					</p>
				</div>
				<button onclick="this.parentElement.parentElement.remove()" class="flex-shrink-0 text-red-700 hover:text-red-700 transition-colors duration-200">
					<svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
					</svg>
				</button>
			</div>
		</div>
	{% endfor %}
	{# fin du code  #}
	{#message flash quand on essaye d'ajouter un user mais qu'on est pas connecter #}
	{% for message in app.flashes('userBloquerDetailPasConnectez') %}
		<div class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 animate-fade-in-down">
			<div class="bg-green-50 border-l-4 border-red-700 p-4 rounded-lg shadow-lg
										                    flex items-center gap-3
										                    min-w-[280px] sm:min-w-[320px] md:min-w-[384px]
										                    max-w-[90vw] sm:max-w-[400px] md:max-w-[448px]">
				<div class="flex-shrink-0">
					<svg class="h-5 w-5 text-red-700" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
					</svg>
				</div>
				<div class="flex-1">
					<p class="text-sm sm:text-base text-red-700 font-medium">
						{{ message }}
					</p>
				</div>
				<button onclick="this.parentElement.parentElement.remove()" class="flex-shrink-0 text-red-700 hover:text-red-700 transition-colors duration-200">
					<svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
					</svg>
				</button>
			</div>
		</div>
	{% endfor %}
	{# fin du code  #}
{#message flash quand on essaye d'ajouter un user mais qu'on est pas connecter #}
	{% for message in app.flashes('commentaire') %}
		<div class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 animate-fade-in-down">
			<div class="bg-green-50 border-l-4 border-red-700 p-4 rounded-lg shadow-lg
										                    flex items-center gap-3
										                    min-w-[280px] sm:min-w-[320px] md:min-w-[384px]
										                    max-w-[90vw] sm:max-w-[400px] md:max-w-[448px]">
				<div class="flex-shrink-0">
					<svg class="h-5 w-5 text-red-700" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
					</svg>
				</div>
				<div class="flex-1">
					<p class="text-sm sm:text-base text-red-700 font-medium">
						{{ message }}
					</p>
				</div>
				<button onclick="this.parentElement.parentElement.remove()" class="flex-shrink-0 text-red-700 hover:text-red-700 transition-colors duration-200">
					<svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
					</svg>
				</button>
			</div>
		</div>
	{% endfor %}
	{# fin du code  #}

{#message flash quand on bloque un utilisateur quand on est connecter #}
	{% for message in app.flashes('userBloquerConenctez') %}
		<div class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 animate-fade-in-down">
			<div class="bg-green-50 border-l-4 border-green-400 p-4 rounded-lg shadow-lg
										                    flex items-center gap-3
										                    min-w-[280px] sm:min-w-[320px] md:min-w-[384px]
										                    max-w-[90vw] sm:max-w-[400px] md:max-w-[448px]">
				<div class="flex-shrink-0">
					<svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
					</svg>
				</div>
				<div class="flex-1">
					<p class="text-sm sm:text-base text-green-700 font-medium">
						{{ message }}
					</p>
				</div>
				<button onclick="this.parentElement.parentElement.remove()" class="flex-shrink-0 text-green-400 hover:text-green-600 transition-colors duration-200">
					<svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
					</svg>
				</button>
			</div>
		</div>
	{% endfor %}
	{# fin du code  #}



	<section
		class="max-w-4xl mx-auto p-4 md:p-6">


		<!-- User Profile Card -->
		<div class="bg-white rounded-lg shadow-md p-6 mb-6">
			<div class="flex flex-col items-center">
				<div class="relative w-24 h-24 mb-4">
					<img src="{{ publication.user.photo ? asset('uploads/uploads/' ~ publication.user.photo) : asset('img/icon.jpg') }}" alt="Photo de profil de {{ publication.user.name }}" class="w-full h-full rounded-full object-cover">
				</div>
				<h2 class="text-xl font-medium mb-2" >{{publication.user.name}}</h2>
				<div class="flex items-center mb-4 ">
					{# <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewbox="0 0 24 24" stroke="none">
						<path d="M12 2l2.4 7.4H22l-6 4.5 2.3 7.1-6.3-4.2-6.3 4.2 2.3-7.1-6-4.5h7.6z"/>
					</svg> #}


					<a href="{{path('app_user_profile', {'name': publication.user.name})}}">
						<span class="ml-2 font-medium hover:text-sky-700">Voir le Profil</span>
					</a>
				</div>
			</div>
		</div>

		{# fin de la partie user card #}


		<!-- Main Post Container -->
		<div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
			<div class="p-4 md:p-6">
				<!-- Post Header -->
				<div class="flex items-start justify-between mb-4">
					<div class="flex items-center">
						<img src="{{ publication.user.photo ? asset('uploads/uploads/' ~ publication.user.photo) : asset('img/icon.jpg') }}" 
							alt="User Avatar" 
							class="w-10 h-10 rounded-full mr-3">
						<div>
							<a class="font-medium hover:text-sky-700" 
								href="{{path('app_user_profile', {'name': publication.user.name})}}">
								{{publication.user.name}}
							</a>
							<div class="text-gray-500 text-sm">
								{{ publication.createdAt|date('d/m/Y Ã  H:i') }}
							</div>
						</div>
					</div>

					<!-- Options Button -->
					<div class="relative">
						<button class="h-8 w-8 rounded-full flex items-center justify-center hover:bg-gray-100 transition-colors duration-200" 
							onclick="togglePopup(event)" 
							aria-label="Options">
							<i class="fa-solid fa-ellipsis text-gray-700 hover:text-[#F48023]"></i>
						</button>
						<div class="popup hidden absolute z-10 bg-white shadow-xl rounded-lg p-3 -right-2 mt-1 w-36">
							<div class="relative">
								<div class="absolute w-3 h-3 bg-white transform rotate-45 -top-1 right-3"></div>
								<div class="flex flex-col gap-3">
									<a href="{{path('app_detail_ajout',{id: publication.user.id, 'redirectionApresAjoutPasConnecter': publication.id})}}" 
										class="text-sm text-gray-700 hover:text-[#F48023] flex items-center gap-2 w-full text-left transition-colors duration-200 py-1" onclick="addUser('{{ publication.user.id }}')" >
										<i class="fas fa-user-plus text-xs"></i>
										<span>Ajouter</span>
									</a>
									<a href="{{path('app_detail_block',{id: publication.user.id, 'redirectionApresBloquerPasConnectez': publication.id})}}" 
										class="text-sm text-gray-700 hover:text-red-500 flex items-center gap-2 w-full text-left transition-colors duration-200 py-1" onclick="blockUser('{{ publication.user.id }}')">
										<i class="fas fa-ban text-xs"></i>
										<span>Bloquer</span>
									</a>
								</div>
							</div>
						</div>
					</div>
				</div>

				<!-- Post Content -->
				<div class="space-y-4">
					<h1 class="text-2xl font-bold">{{publication.title}}</h1>
					
					{% if publication.category.name == 'Programmation' and publication.langage %}
						<pre class="bg-gray-900 rounded-lg overflow-x-auto">
							<code class="language-{{ publication.langage.name|lower }} block p-4 text-sm text-gray-100 font-mono leading-relaxed">
								{{- publication.description -}}
							</code>
						</pre>
					{% else %}
						<p class="text-gray-800">{{publication.description}}</p>
					{% endif %}

					<div class="flex flex-wrap gap-2">
						<span class="px-3 py-1 bg-gray-200 text-gray-700 rounded-md text-sm">
							{{publication.category.name}}
						</span>
					</div>
				</div>
			</div>
		</div>


		<!-- Comment Section -->
		<div class="bg-white rounded-lg shadow-md p-6">
			<h3 class="text-gray-700 text-lg font-semibold mb-6">Commentaires</h3>

			<!-- Comments List Section -->
			<div class="space-y-6">
				{% for comment in commentaireFin %}
					<div class="border-b border-gray-200 pb-6 last:border-b-0">
						<div class="flex items-start space-x-4">
							<img src="{{ comment.user.photo ? asset('uploads/uploads/' ~ comment.user.photo) : asset('img/icon.jpg') }}" alt="Avatar" class="w-10 h-10 rounded-full object-cover">

							<div class="flex-1">
								<div class="flex items-center justify-between mb-2">
									<a class="font-medium" href="{{path('app_user_profile', {'name': comment.user.name})}}">{{comment.user.name}} </a>
									<span class="text-gray-500 text-sm">{{ comment.createdAt|date('d/m/Y Ã  H:i') }}</span>
									{% if app.user and app.user == comment.user %}
										<form method="post" action="{{ path('commentaire_supprimer', {'id': comment.id}) }}" >
											<input type="hidden" name="_token" value="{{ csrf_token('delete_comment_' ~ comment.id) }}">
											<button type="submit" class="btn btn-danger">
												<i class="fa-solid fa-trash-can" style="color: #ff0000;"></i>
											</button>
										</form>
									{% endif %}
								</div>

								<p class="text-gray-800 text-sm sm:text-base">{{comment.message}}</p>

								<!-- Comment Actions -->
								<div class="flex items-center mt-3">
									<button class="text-gray-500 hover:text-blue-600 text-sm flex items-center transition-colors duration-200">
										<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1.5" fill="none" viewbox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905a3.61 3.61 0 01-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5"/>
										</svg>
										<span>J'aime</span>
									</button>
								</div>
							</div>
						</div>
					</div>
				{% else %}
					<div class="text-center py-8">
						<p class="text-gray-500">Aucun commentaire pour le moment. Soyez le premier Ã  commenter !</p>
					</div>
				{% endfor %}
			</div>

			<!-- Comment Form -->
			<div class="mt-8 pt-6 border-t border-gray-100">
				{% if app.user %}
					{{ form_start(commentaireType, {'attr': {'class': 'w-full'}}) }}
					<div class="mb-4">
						{{ form_widget(commentaireType.message, {
            'attr': {
              'placeholder': 'Ãcrivez votre commentaire',
              'class': 'w-full px-4 py-3 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-y min-h-[100px]'
            }
          }) }}
					</div>
					<div class="flex justify-end">
						<button type="submit" class="px-6 py-2.5 bg-orange-500 text-white font-medium rounded-lg hover:bg-orange-600 transition-colors duration-200">
							Poster
						</button>
					</div>
					{{ form_end(commentaireType) }}
				{% else %}
					<div class="text-center py-6">
						<p class="text-gray-600">
							<a href="{{path('app_register')}}" class="text-orange-500 hover:text-orange-600 font-medium">Connectez-vous</a>
							pour participer Ã  la discussion
						</p>
					</div>
				{% endif %}
			</div>
		</div>
	</section>


<script>

// Gestion des modales
function addUser(userId) {
currentUserId = userId;
openModal('add-user-modal');
}

function blockUser(userId) {
currentUserId = userId;
openModal('block-user-modal');
}

function openModal(modalId) {
const modal = document.getElementById(modalId);
const content = document.getElementById(modalId + '-content');

modal.classList.remove('hidden');
modal.classList.add('flex');

setTimeout(() => {
content.classList.remove('scale-95', 'opacity-0');
content.classList.add('scale-100', 'opacity-100');
}, 50);
}

function closeModal(modalId) {
const modal = document.getElementById(modalId);
const content = document.getElementById(modalId + '-content');

content.classList.remove('scale-100', 'opacity-100');
content.classList.add('scale-95', 'opacity-0');

setTimeout(() => {
modal.classList.remove('flex');
modal.classList.add('hidden');
}, 300);
}

// Fonction pour gÃ©rer l'affichage du popup
function togglePopup(event) {
    const button = event.currentTarget;
    const popup = button.nextElementSibling;
    
    // Toggle la classe hidden
    popup.classList.toggle('hidden');
    
    // Ajoute une petite animation
    if (!popup.classList.contains('hidden')) {
        setTimeout(() => {
            popup.style.opacity = '1';
            popup.style.transform = 'translateY(0)';
        }, 10);
    } else {
        popup.style.opacity = '0';
        popup.style.transform = 'translateY(-10px)';
    }
    
    // EmpÃªche la propagation du clic
    event.stopPropagation();
}

// Ferme le popup quand on clique ailleurs sur la page
document.addEventListener('click', function(event) {
    const popups = document.querySelectorAll('.popup');
    popups.forEach(popup => {
        if (!popup.contains(event.target) && !event.target.matches('button[onclick="togglePopup(event)"]')) {
            popup.classList.add('hidden');
            popup.style.opacity = '0';
            popup.style.transform = 'translateY(-10px)';
        }
    });
});
</script>

{% endblock %}
