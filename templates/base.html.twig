<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		{# <meta name="turbo-visit-control" content="reload"> #}
		<title>
			{% block title %}
				Welcome!
			{% endblock %}
		</title>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer"/> {% block stylesheets %}{% endblock %}
        
        <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-dark.min.css">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/javascript.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/python.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/php.min.js"></script>

        {# Notre script personnalisé #}
        <script src="{{ asset('js/highlight.js') }}"></script>




		{% block javascripts %}
			{% block importmap %}
				{{ importmap('app') }}
			{% endblock %}
		{% endblock %}
	</head>
	<body>
		{# Ajout du menu latéral qui sera caché par défaut #}
	{# Sidebar menu latéral #}
<header id="sidebar" class="fixed top-0 right-0 w-0 h-full bg-white shadow-2xl transition-all duration-300 z-50 overflow-hidden">
    <div class="flex flex-col p-6">
        <div class="flex justify-end mb-6">
            <button id="closeMenu" class="text-gray-800 hover:text-gray-500 transition-colors p-2">
                <i class="fa-solid fa-xmark text-xl"></i>
            </button>
        </div>
        <nav class="flex flex-col gap-5">
            {% if app.user %}
                <a href="{{ path('app_profile') }}" class="text-lg font-medium flex items-center gap-3 hover:text-orange-500 transition-colors border-b border-gray-200 pb-4">
                    <i class="fa-solid fa-user p-2 bg-gray-100 rounded-full"></i>
                    <span>{{ app.user.name }}</span>
                </a>
                <a href="{{ path('app_home') }}" class="text-lg font-medium hover:text-orange-500 transition-colors border-b border-gray-200 pb-4">Accueil</a>
                <a href="{{ path('app_questions') }}" class="text-lg font-medium hover:text-orange-500 transition-colors border-b border-gray-200 pb-4">Poser une question</a>
                <a href="{{ path('app_logout') }}" class="text-lg font-medium hover:text-orange-500 transition-colors border-b border-gray-200 pb-4">Déconnexion</a>
            {% else %}
                <a href="{{ path('app_home') }}" class="text-lg font-medium hover:text-orange-500 transition-colors border-b border-gray-200 pb-4">Accueil</a>
                <a href="{{ path('app_register') }}" class="text-lg font-medium hover:text-orange-500 transition-colors border-b border-gray-200 pb-4">Connexion</a>
            {% endif %}
        </nav>
    </div>
</header>

{# Overlay pour le background du menu mobile #}
<div id="overlay" class="fixed inset-0 bg-black opacity-0 pointer-events-none transition-opacity duration-300 z-40"></div>

{# Header principal #}
<header class="bg-[#FDEDD5] py-3 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto flex items-center justify-between">
        {# Logo #}
        <a href="{{ path('app_home') }}" class="flex-shrink-0">
            <img src="{{ asset('img/Logo.png') }}" alt="Logo" class="w-28 sm:w-32">
        </a>

    

        {# Navigation desktop #}
        <div class="hidden md:flex md:items-center md:space-x-4">
            {% if app.user %}
                <a href="{{ path('app_profile') }}" class="p-2 hover:bg-gray-100 rounded-full transition-colors">
                    <i class="fa-solid fa-user text-gray-800"></i>
                </a>
                <a href="{{ path('app_logout') }}" class="p-2 text-gray-800 hover:text-orange-600 transition-colors">
                    <i class="fa-solid fa-sign-out-alt"></i>
                </a>
                <a href="{{ path('app_questions') }}" class="relative inline-flex items-center justify-center px-6 py-2 overflow-hidden text-white bg-[#F5702B] rounded-full group hover:bg-orange-700 transition-colors">
                    <span class="relative flex items-center gap-2 text-sm font-medium">
                        <i class="fa-solid fa-plus"></i>
                        Poser votre question
                    </span>
                </a>
            {% else %}
                <a href="{{ path('app_register') }}" class="px-5 py-2 bg-[#F5702B] text-white text-sm font-medium rounded-md hover:bg-orange-700 transition-colors">
                    Connexion
                </a>
            {% endif %}
        </div>

       

        {# Bouton menu burger mobile #}
        <button id="openMenu" class="p-2 text-gray-800 hover:text-orange-600 transition-colors md:hidden">
            <i class="fa-solid fa-bars text-xl"></i>
        </button>
    </div>
</header>

{# Chatbot #}
<section id="chatbot" class="fixed bottom-6 left-6 z-[9999]">
    {# Bouton du chatbot #}
    <button id="chatbot-toggle" class="w-16 h-16 bg-[#F5702B] rounded-full flex items-center justify-center text-white shadow-xl hover:bg-orange-700 transition-colors">
        <i id="chatbot-icon" class="fa-solid fa-message text-2xl"></i>
    </button>

    {# Fenêtre du chat #}
    <div id="chat-window" class="hidden absolute bottom-24 ml-8 w-[320px] sm:w-[350px] md:w-[400px] bg-white rounded-lg shadow-xl">
        {# Header du chat #}
        <div class="bg-[#F5702B] p-4 rounded-t-lg">
            <div class="flex items-center justify-between">
                <h3 class="text-white font-medium">Chat Assistant</h3>
                <button id="close-chat" class="text-white hover:text-gray-200">
                    <i class="fa-solid fa-xmark text-xl"></i>
                </button>
            </div>
        </div>

        {# Messages container #}
         {% if app.user %}
        <div id="chat-messages" class="h-80 overflow-y-auto p-4 space-y-4">
            <div class="flex items-start gap-2.5">
                <div class="flex flex-col w-full max-w-[320px] leading-1.5">
                    <div class="flex items-center space-x-2 rtl:space-x-reverse">
                        <span class="text-sm font-semibold text-gray-900">Assistant</span>
                    </div>
                    <p class="p-4 bg-gray-100 rounded-e-xl rounded-es-xl text-sm">Bonjour {{app.user.name}}! Comment puis-je vous aidez</p>
                </div>
            </div>
        </div>

        {# Questions prédéfinies #}
        <div class="p-4 border-t space-y-2">
            <button class="question-btn w-full p-2 text-left bg-gray-50 hover:bg-gray-100 rounded-lg transition-colors text-sm" data-question="Comment poser une question ?">
                Comment poser une question ?
            </button>
            <button class="question-btn w-full p-2 text-left bg-gray-50 hover:bg-gray-100 rounded-lg transition-colors text-sm" data-question="Comment modifier mon profil ?">
                Comment modifier mon profil ?
            </button>
            <button class="question-btn w-full p-2 text-left bg-gray-50 hover:bg-gray-100 rounded-lg transition-colors text-sm" data-question="Comment contacter le support ?">
                Comment contacter le support ?
            </button>
        </div>
    </div>
    {% else %}
     <div id="chat-messages" class="h-80 overflow-y-auto p-4 space-y-4">
            <div class="flex items-start gap-2.5">
                <div class="flex flex-col w-full max-w-[320px] leading-1.5">
                    <div class="flex items-center space-x-2 rtl:space-x-reverse">
                        <span class="text-sm font-semibold text-gray-900">Assistant</span>
                    </div>
                   
                    <p class="p-4 bg-gray-100 rounded-e-xl rounded-es-xl text-sm"> Veuillez vous <a href="{{ path('app_register')}}"><span class="text-[#F5702B]">connectez</span></a> pour accedez a mes services</p>
                </div>
             
            </div>
        </div>

        {# Input pour le message #}
        {# <div class="p-4 border-t">
            <div class="flex items-center gap-2">
                <input type="text" id="chat-input" class="flex-1 p-2 border rounded-lg focus:outline-none focus:border-[#F5702B]" placeholder="Écrivez votre message...">
                <button id="send-message" class="p-2 bg-[#F5702B] text-white rounded-lg hover:bg-orange-700 transition-colors">
                    <i class="fa-solid fa-paper-plane"></i>
                </button>
            </div>
        </div> #}
    </div>
    {% endif %}
</section>

		{% block body %}{% endblock %}

		{# Tous les scripts regroupés #}
		<script>
// Script du menu burger
document.addEventListener('DOMContentLoaded', function () {
const sidebar = document.querySelector('#sidebar');
const overlay = document.querySelector('#overlay')
const openMenuBtn = document.querySelector('#openMenu')
const closeMenuBtn = document.querySelector('#closeMenu')




// Fonction pour ouvrir le menu
openMenuBtn.addEventListener('click', function () {
sidebar.classList.remove('w-0');
sidebar.classList.add('w-4/5', 'sm:w-1/2', 'md:w-1/3');
overlay.classList.remove('opacity-0');
overlay.classList.add('opacity-50');
})

// Fonction pour fermer le menu
function closeMenu() {
sidebar.classList.remove('w-4/5', 'sm:w-1/2', 'md:w-1/3')
sidebar.classList.add('w-0')
overlay.classList.remove('opacity-50')
overlay.classList.add('opacity-0')
}

closeMenuBtn.addEventListener('click', closeMenu)
overlay.addEventListener('click', closeMenu)
})



// Script du chatbot
document.addEventListener('DOMContentLoaded', function() {
    const chatbotToggle = document.getElementById('chatbot-toggle');
    const chatWindow = document.getElementById('chat-window');
    const closeChat = document.getElementById('close-chat');
    const chatMessages = document.getElementById('chat-messages');
    const chatbotIcon = document.getElementById('chatbot-icon');
    const questionButtons = document.querySelectorAll('.question-btn');
 


    // Réponses prédéfinies
    const responses = {
        "Comment poser une question ?": "Pour poser une question, cliquez sur le bouton orange 'Poser votre question' en haut de la page. Remplissez ensuite le formulaire avec les détails de votre question.",
        "Comment modifier mon profil ?": "Pour modifier votre profil, cliquez sur l'icône utilisateur en haut de la page, puis cliquez sur le bouton modifiez mon profile.",
        "Comment contacter le support ?": "Vous pouvez contacter notre support en envoyant un email à support@forum.com ou en utilisant le formulaire de contact."
    };

    function toggleChat() {
        const isHidden = chatWindow.classList.contains('hidden');
        chatWindow.classList.toggle('hidden');
        chatbotIcon.classList.toggle('fa-message');
        chatbotIcon.classList.toggle('fa-xmark');
    }

    function addMessage(message, isUser = true) {
        const messageDiv = document.createElement('div');
        messageDiv.className = 'flex items-start gap-2.5 ' + (isUser ? 'justify-end' : '');
        
        const content = `
            <div class="flex flex-col w-full max-w-[320px] leading-1.5">
                <div class="flex items-center space-x-2 rtl:space-x-reverse ${isUser ? 'justify-end' : ''}">
                    <span class="text-sm font-semibold text-gray-900">${isUser ? 'test' : 'Assistant'}</span>
                </div>
                <p class="p-4 ${isUser ? 'bg-[#F5702B] text-white' : 'bg-gray-100 text-gray-900'} rounded-e-xl rounded-es-xl text-sm">${message}</p>
            </div>
        `;
        
        messageDiv.innerHTML = content;
        chatMessages.appendChild(messageDiv);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Gestion des clics sur les questions
    questionButtons.forEach(button => {
        button.addEventListener('click', function() {
            const question = this.dataset.question;
            addMessage(question, true);
            
            setTimeout(() => {
                addMessage(responses[question], false);
            }, 500);
        });
    });

    chatbotToggle.addEventListener('click', toggleChat);
    closeChat.addEventListener('click', toggleChat);
});
		</script>

		{% block js %}{% endblock %}
	</body>
</html>